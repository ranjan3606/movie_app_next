#!/bin/bash

# ЁЯОм Movie App Backend - Setup Script
# рдпрд╣ script рдЖрдкрдХреЗ backend server рдХреЛ setup рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реИ

echo "ЁЯОм Movie App Backend Setup рд╢реБрд░реВ рд╣реЛ рд░рд╣рд╛ рд╣реИ..."
echo "================================================"

# Check if Node.js is installed
if ! command -v node &> /dev/null; then
    echo "тЭМ Node.js рдирд╣реАрдВ рдорд┐рд▓рд╛ред рдХреГрдкрдпрд╛ Node.js 18+ install рдХрд░реЗрдВред"
    echo "   Download: https://nodejs.org/"
    exit 1
fi

# Check Node.js version
NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    echo "тЭМ Node.js version 18+ рдЪрд╛рд╣рд┐рдПред Current version: $(node --version)"
    exit 1
fi

echo "тЬЕ Node.js version: $(node --version)"

# Install dependencies
echo ""
echo "ЁЯУж Dependencies install рд╣реЛ рд░рд╣реА рд╣реИрдВ..."
npm install

if [ $? -ne 0 ]; then
    echo "тЭМ Dependencies install рдирд╣реАрдВ рд╣реБрдИрдВред рдХреГрдкрдпрд╛ manually 'npm install' рдЪрд▓рд╛рдПрдВред"
    exit 1
fi

echo "тЬЕ Dependencies successfully install рд╣реЛ рдЧрдИрдВ"

# Create .env file if it doesn't exist
if [ ! -f ".env" ]; then
    echo ""
    echo "ЁЯФз Environment file (.env) рдмрди рд░рд╣реА рд╣реИ..."
    
    cat > .env << 'EOL'
# MongoDB Database
MONGODB_URI="mongodb://localhost:27017/movie_assessment"

# JWT Configuration
JWT_SECRET="your-super-secret-jwt-key-here-change-in-production"
JWT_EXPIRES_IN="24h"

# Server Configuration
PORT=3001
NODE_ENV="development"

# Frontend URL (for CORS)
FRONTEND_URL="http://localhost:3000"

# Cloudinary Configuration (FREE - 25GB storage + 25GB bandwidth)
# Sign up at https://cloudinary.com/ and get your credentials
CLOUDINARY_CLOUD_NAME="your-cloud-name-here"
CLOUDINARY_API_KEY="your-api-key-here"
CLOUDINARY_API_SECRET="your-api-secret-here"
EOL

    echo "тЬЕ .env file рдмрди рдЧрдИред рдХреГрдкрдпрд╛ рдЗрд╕рдореЗрдВ рдЕрдкрдиреА values update рдХрд░реЗрдВред"
else
    echo "тЬЕ .env file already exists"
fi

# Check if MongoDB is running (for macOS)
if command -v brew &> /dev/null; then
    echo ""
    echo "ЁЯФН MongoDB status check рд╣реЛ рд░рд╣реА рд╣реИ..."
    
    if brew services list | grep -q "mongodb.*started"; then
        echo "тЬЕ MongoDB service рдЪрд▓ рд░рд╣реА рд╣реИ"
    else
        echo "тЪая╕П  MongoDB service рдирд╣реАрдВ рдЪрд▓ рд░рд╣реАред Start рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП:"
        echo "   brew services start mongodb/brew/mongodb-community"
        echo ""
        echo "ЁЯЪА MongoDB install рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП (рдЕрдЧрд░ рдирд╣реАрдВ рд╣реИ):"
        echo "   brew install mongodb-community"
    fi
fi

echo ""
echo "================================================"
echo "ЁЯОЙ Backend Setup Complete!"
echo "================================================"
echo ""
echo "ЁЯУЭ рдЕрдЧрд▓реЗ steps:"
echo ""
echo "1. Environment Variables Setup рдХрд░реЗрдВ:"
echo "   - .env file рдореЗрдВ рдЕрдкрдиреА MongoDB URI рдбрд╛рд▓реЗрдВ"
echo "   - Cloudinary credentials add рдХрд░реЗрдВ (https://cloudinary.com/)"
echo "   - JWT_SECRET рдХреЛ strong value рд╕реЗ replace рдХрд░реЗрдВ"
echo ""
echo "2. MongoDB рдХреЛ start рдХрд░реЗрдВ (рдЕрдЧрд░ рдирд╣реАрдВ рдЪрд▓ рд░рд╣рд╛):"
echo "   brew services start mongodb/brew/mongodb-community"
echo ""
echo "3. Server start рдХрд░реЗрдВ:"
echo "   npm run start:dev"
echo ""
echo "4. API documentation рджреЗрдЦреЗрдВ:"
echo "   http://localhost:3001/api/docs"
echo ""
echo "ЁЯУЪ More help рдХреЗ рд▓рд┐рдП README.md рджреЗрдЦреЗрдВ"
echo ""
echo "ЁЯЪА Happy Coding!" 