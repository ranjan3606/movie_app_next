#!/bin/bash

# ЁЯОм Movie App Frontend - Setup Script
# рдпрд╣ script рдЖрдкрдХреЗ frontend application рдХреЛ setup рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реИ

echo "ЁЯОм Movie App Frontend Setup рд╢реБрд░реВ рд╣реЛ рд░рд╣рд╛ рд╣реИ..."
echo "================================================"

# Check if Node.js is installed
if ! command -v node &> /dev/null; then
    echo "тЭМ Node.js рдирд╣реАрдВ рдорд┐рд▓рд╛ред рдХреГрдкрдпрд╛ Node.js 18+ install рдХрд░реЗрдВред"
    echo "   Download: https://nodejs.org/"
    exit 1
fi

# Check Node.js version
NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 18 ]; then
    echo "тЭМ Node.js version 18+ рдЪрд╛рд╣рд┐рдПред Current version: $(node --version)"
    exit 1
fi

echo "тЬЕ Node.js version: $(node --version)"

# Install dependencies
echo ""
echo "ЁЯУж Dependencies install рд╣реЛ рд░рд╣реА рд╣реИрдВ..."
npm install

if [ $? -ne 0 ]; then
    echo "тЭМ Dependencies install рдирд╣реАрдВ рд╣реБрдИрдВред рдХреГрдкрдпрд╛ manually 'npm install' рдЪрд▓рд╛рдПрдВред"
    exit 1
fi

echo "тЬЕ Dependencies successfully install рд╣реЛ рдЧрдИрдВ"

# Create .env.local file if it doesn't exist
if [ ! -f ".env.local" ]; then
    echo ""
    echo "ЁЯФз Environment file (.env.local) рдмрди рд░рд╣реА рд╣реИ..."
    
    cat > .env.local << 'EOL'
# Backend API URL - Make sure backend server is running on port 3001
NEXT_PUBLIC_API_URL="http://localhost:3001/api"

# Optional: Disable Next.js telemetry
NEXT_TELEMETRY_DISABLED=1
EOL

    echo "тЬЕ .env.local file рдмрди рдЧрдИ"
else
    echo "тЬЕ .env.local file already exists"
fi

# Check if backend server is running
echo ""
echo "ЁЯФН Backend server status check рд╣реЛ рд░рд╣реА рд╣реИ..."

if curl -s http://localhost:3001/api/health > /dev/null 2>&1; then
    echo "тЬЕ Backend server рдЪрд▓ рд░рд╣реА рд╣реИ (http://localhost:3001)"
else
    echo "тЪая╕П  Backend server рдирд╣реАрдВ рдЪрд▓ рд░рд╣реАред Frontend рдХреЗ рд▓рд┐рдП backend рдЬрд░реВрд░реА рд╣реИред"
    echo ""
    echo "ЁЯЪА Backend start рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП:"
    echo "   cd ../backend"
    echo "   npm run start:dev"
    echo ""
    echo "ЁЯУЪ Backend setup рдХреЗ рд▓рд┐рдП ../backend/README.md рджреЗрдЦреЗрдВ"
fi

# Check for TypeScript issues
echo ""
echo "ЁЯФН TypeScript configuration check рд╣реЛ рд░рд╣реА рд╣реИ..."
if npx tsc --noEmit --skipLibCheck > /dev/null 2>&1; then
    echo "тЬЕ TypeScript configuration рдареАрдХ рд╣реИ"
else
    echo "тЪая╕П  TypeScript рдореЗрдВ рдХреБрдЫ issues рд╣реЛ рд╕рдХрддреЗ рд╣реИрдВред Development рдореЗрдВ fix рд╣реЛ рдЬрд╛рдПрдВрдЧреЗред"
fi

echo ""
echo "================================================"
echo "ЁЯОЙ Frontend Setup Complete!"
echo "================================================"
echo ""
echo "ЁЯУЭ рдЕрдЧрд▓реЗ steps:"
echo ""
echo "1. Backend Server рдХреЛ start рдХрд░реЗрдВ (рдЬрд░реВрд░реА):"
echo "   cd ../backend"
echo "   npm run start:dev"
echo ""
echo "2. Frontend Development Server start рдХрд░реЗрдВ:"
echo "   npm run dev"
echo ""
echo "3. Application access рдХрд░реЗрдВ:"
echo "   http://localhost:3000"
echo ""
echo "4. API documentation рджреЗрдЦреЗрдВ (backend running рд╣реЛрдиреЗ рдкрд░):"
echo "   http://localhost:3001/api/docs"
echo ""
echo "ЁЯФз Available Commands:"
echo "   npm run dev          # Development server"
echo "   npm run build        # Production build"
echo "   npm run start        # Production server"
echo "   npm run lint         # Code linting"
echo ""
echo "ЁЯУЪ More help рдХреЗ рд▓рд┐рдП README.md рджреЗрдЦреЗрдВ"
echo ""
echo "ЁЯЪА Happy Coding!" 